.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SendMail 3"
.TH SendMail 3 "2003-03-04" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
SendMail \-\- This is a perl module which is using Socket to connect the SMTP port to send mails.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use SendMail;
.Ve
.PP
.Vb 17
\&  $smtpserver           = "mail.server.com";
\&  $smtpport             = 25;
\&  $userid               = "authuserid";
\&  $password             = "authpassword";
\&  $sender               = "Sender <sender@domain.com>";
\&  $subject              = "Subject of the mail.";
\&  $recipient            = "Recipient <recipient@domain.com>";
\&  $recipient2           = "Recipient 2 <recipient2@domain.com>";
\&  @recipients           = ($recipient, $recipient2);
\&  $administrator        = "Administrator <admin@domain.com>";
\&  $administrator2       = "Administrator 2 <admin2@domain.com>";
\&  $replyto              = $sender;
\&  $replyto2             = $recipient;
\&  @replytos             = ($replyto, $replyto2);
\&  $header               = "X-Mailer";
\&  $headervalue          = "Perl SendMail Module 2.09";
\&  $mailbodydata         = "This is a testing mail.";
.Ve
.PP
.Vb 3
\&  $obj = new SendMail();
\&  $obj = new SendMail($smtpserver);
\&  $obj = new SendMail($smtpserver, $smtpport);
.Ve
.PP
.Vb 2
\&  $obj->setDebug($obj->ON);
\&  $obj->setDebug($obj->OFF);
.Ve
.PP
.Vb 2
\&  $obj->setAuth($obj->AUTHLOGIN, $userid, $password);
\&  $obj->setAuth($obj->AUTHPLAIN, $userid, $password);
.Ve
.PP
.Vb 1
\&  $obj->From($sender);
.Ve
.PP
.Vb 1
\&  $obj->Subject($subject);
.Ve
.PP
.Vb 3
\&  $obj->To($recipient);
\&  $obj->To($recipient, $recipient2);
\&  $obj->To(@recipients);
.Ve
.PP
.Vb 3
\&  $obj->Cc($recipient);
\&  $obj->Cc($recipient, $recipient2);
\&  $obj->Cc(@recipients);
.Ve
.PP
.Vb 3
\&  $obj->Bcc($recipient);
\&  $obj->Bcc($recipient, $recipient2);
\&  $obj->Bcc(@recipients);
.Ve
.PP
.Vb 3
\&  $obj->ErrorsTo($administrator);
\&  $obj->ErrorsTo($administrator, $administrator2);
\&  $obj->ErrorsTo(@administrators);
.Ve
.PP
.Vb 3
\&  $obj->ReplyTo($replyto);
\&  $obj->ReplyTo($replyto, $replyto2);
\&  $obj->ReplyTo(@replytos);
.Ve
.PP
.Vb 1
\&  $obj->setMailHeader($header, $headervalue);
.Ve
.PP
.Vb 1
\&  $obj->setMailBody($mailbodydata);
.Ve
.PP
.Vb 4
\&  $obj->Attach($file);
\&  $obj->Attach($file, \e$filedata);
\&  $obj->Attach($file, \e*FILEHANDLE);
\&  $obj->Attach($file, new IO::File("filename", "r"));
.Ve
.PP
.Vb 4
\&  $obj->Inline($file);
\&  $obj->Inline($file, \e$filedata);
\&  $obj->Inline($file, \e*FILEHANDLE);
\&  $obj->Inline($file, new IO::File("filename", "r"));
.Ve
.PP
.Vb 3
\&  if ($obj->sendMail() != 0) {
\&    print $obj->{'error'}."\en";
\&  }
.Ve
.PP
.Vb 4
\&  $obj->clearTo();
\&  $obj->clearBcc();
\&  $obj->clearCc();
\&  $obj->clearAttach();
.Ve
.PP
.Vb 1
\&  $obj->reset();
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
http://www.tneoh.zoneit.com/perl/SendMail/testSendMail.pl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is written so that user can easily use it to send mailing list. 
Please do not abuse it.
.PP
And it can be used in any perl script to send a mail similar to sending mail
by using /usr/lib/sendmail program.
.PP
I have tested this module on Unix and Windows platforms, it works fine. 
Of course you need perl version 5. With the example script, 
testSendMail.pl, you can simply a testing on it.
.PP
Errors, comments or questions are welcome.
.SH "CHANGES"
.IX Header "CHANGES"
1.00\->1.01 Recipients with email address contains a \*(L"\-\*(R" in the hostname,
will be able to receive the email now.
.PP
1.01\->1.02 Module now not only expecting one line reply from the server, it
can receive multiple lines until the server waiting for next command.
.PP
1.02\->1.03 Repeat declaration of \*(L"$currEmail\*(R" will give an error in \s-1NT\s0
system.
.PP
1.03\->1.04 Email addresses are enclosed in < and > after \*(L"\s-1MAIL\s0 \s-1FROM\s0\*(R" and
\&\*(L"\s-1RCPT\s0 \s-1TO\s0\*(R" commands.(\s-1RFC821\s0) For Microsoft Exchange 4, email addresses
not enclosed in < and > will get an error from the system.
.PP
1.04\->1.05 \fIgetEmailAddress()\fR subroutine should accept email address
in just \*(L"<user@domain.com>\*(R" format.
.PP
1.05\->2.00b Simple \s-1MIME\s0 supported. \fIattach()\fR, \fIAttach()\fR and \fIInline()\fR 
subroutines added.
.PP
2.00b\->2.00 \fIAttach()\fR and \fIInline()\fR supports for filehandle which is
easier for users who are using \s-1CGI\s0.pm. Prototypes are added. And we
send \*(L"\er\en\*(R" to the \s-1SMTP\s0 server instead of only \*(L"\en\*(R".
.PP
2.00\->2.01 After sending the maildata, supposed to be \*(L"\er\en\*(R" instead
of just \*(L"\en\*(R".
.PP
2.01\->2.02 Calling \fIeof()\fR to check the opened socket, else it will
cause an error in ActivePerl5.6.
.PP
2.02\->2.03 Change all \s-1EOL\s0 to \*(L"\er\en\*(R", instead of just \*(L"\en\*(R".
.PP
2.03\->2.04 Only Base64 encoding is being used, no more using Quoted
Print. And \fIimport()\fR has been taken out for Sys::Hostname as it has
been deprecated. Giving more hints in \*(L"no host\*(R" error message.
.PP
2.04\->2.05 \fIclearTo()\fR, \fIclearCc()\fR and \fIclearBcc()\fR are added to allow
clearing the recipient email addresses without reset the whole email
information, eg. body, subject and etc. Simple \s-1SMTP\s0 \s-1AUTH\s0 is supported.
.PP
2.05\->2.06 Some values were not initialized.
.PP
2.06\->2.07 The \fIclearXXX()\fR functions, eg. \fIclearTo()\fR, did not work well
when sending multiple emails. The list was not cleared properly. For
example, the To: field would be left with a 
\&\*(L"ARRAY@localhost.domain.com (82477472),\*(R" in it. \fIclearAttach()\fR is added.
And \s-1EHLO\s0 is used first to support \s-1SMTP\s0 \s-1AUTH\s0, because some of the \s-1MTA\s0 is
looking for \s-1EHLO\s0 first.
.PP
2.07\->2.08 Bare \s-1LF\s0 error occurred when no attachment.
.PP
2.08\->2.09 Better fix for \s-1LF\s0 problem.
.SH "CREDITS"
.IX Header "CREDITS"
laurens van alphen
.PP
Dag Ã˜ien
.PP
Juliano, Sylvia, \s-1CON\s0, \s-1OASD\s0(\s-1HA\s0)/TMA
.PP
Tony Simopoulos
.PP
Jeff Graves
.PP
Pisciotta, Steve
.PP
Phill Crow
.PP
Mark Grennan
.PP
Bill Friend
.SH "SOURCE"
.IX Header "SOURCE"
http://www.tneoh.zoneit.com/perl/SendMail/SendMail.pm
.SH "AUTHOR"
.IX Header "AUTHOR"
Simon Tneoh Chee-Boon	tneohcb@pc.jaring.my
.PP
Copyright (c) 1998\-2003 Simon Tneoh Chee\-Boon. All rights reserved.
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "VERSION"
.IX Header "VERSION"
Version 2.09 	04 March 2003
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Socket.pm, MIME::Base64.pm, MIME::QuotedPrint.pm
